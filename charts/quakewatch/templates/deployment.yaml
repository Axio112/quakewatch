apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-helm
  labels:
    app.kubernetes.io/name: quakewatch
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: "Helm"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: quakewatch
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: quakewatch
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: quakewatch
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
          env:
            - name: APP_MESSAGE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-helm-config
                  key: APP_MESSAGE
            - name: SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name | quote }}
                  key: SECRET_TOKEN
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          resources:
{{- toYaml .Values.resources | nindent 12 }}
